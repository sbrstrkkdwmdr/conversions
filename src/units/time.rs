use super::get_values;
use super::types;

pub fn units() -> Vec<types::Unit> {
    return vec![
        types::Unit {
            names: get_values("time_s".to_string()),
            can_use_si: true,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x/60".to_string(),
                    calc: |x| x / 60.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x/3600".to_string(),
                    calc: |x| x / 3600.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x/86400".to_string(),
                    calc: |x| x / 86400.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x/604800".to_string(),
                    calc: |x| x / 604800.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x/604800/2".to_string(),
                    calc: |x| x / 604800.0 / 2.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x/86400/30.437".to_string(),
                    calc: |x| x / 86400.0 / 30.437,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x/86400/40".to_string(),
                    calc: |x| x / 86400.0 / 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x/86400/365.25".to_string(),
                    calc: |x| x / 86400.0 / 365.25,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x/86400/365.25/10".to_string(),
                    calc: |x| x / 86400.0 / 365.25 / 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x/86400/365.25/100".to_string(),
                    calc: |x| x / 86400.0 / 365.25 / 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x/86400/365.25/1e3".to_string(),
                    calc: |x| x / 86400.0 / 365.25 / 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/86400/365.25/1e6".to_string(),
                    calc: |x| x / 86400.0 / 365.25 / 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/86400/365.25/1e9".to_string(),
                    calc: |x| x / 86400.0 / 365.25 / 1e9,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_min".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*60".to_string(),
                    calc: |x| x * 60.0,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x/60".to_string(),
                    calc: |x| x / 60.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x/1440".to_string(),
                    calc: |x| x / 1440.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x/10080".to_string(),
                    calc: |x| x / 10080.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x/10080/2".to_string(),
                    calc: |x| x / 10080.0 / 2.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x/1440/30.437".to_string(),
                    calc: |x| x / 1440.0 / 30.437,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x/1440/40".to_string(),
                    calc: |x| x / 1440.0 / 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x/1440/365.25".to_string(),
                    calc: |x| x / 1440.0 / 365.25,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x/1440/365.25/10".to_string(),
                    calc: |x| x / 1440.0 / 365.25 / 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x/1440/365.25/100".to_string(),
                    calc: |x| x / 1440.0 / 365.25 / 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x/1440/365.25/1e3".to_string(),
                    calc: |x| x / 1440.0 / 365.25 / 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/1440/365.25/1e6".to_string(),
                    calc: |x| x / 1440.0 / 365.25 / 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/1440/365.25/1e9".to_string(),
                    calc: |x| x / 1440.0 / 365.25 / 1e9,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_hr".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*3600".to_string(),
                    calc: |x| x * 3600.0,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x*60".to_string(),
                    calc: |x| x * 60.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x/24".to_string(),
                    calc: |x| x / 24.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x/168".to_string(),
                    calc: |x| x / 168.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x/336".to_string(),
                    calc: |x| x / 336.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x/730.0008".to_string(),
                    calc: |x| x / 730.0008,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x/24/40".to_string(),
                    calc: |x| x / 24.0 / 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x/8766".to_string(),
                    calc: |x| x / 8766.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x/8766/10".to_string(),
                    calc: |x| x / 8766.0 / 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x/8766/100".to_string(),
                    calc: |x| x / 8766.0 / 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x/8766/1e3".to_string(),
                    calc: |x| x / 8766.0 / 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/8766/1e6".to_string(),
                    calc: |x| x / 8766.0 / 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/8766/1e9".to_string(),
                    calc: |x| x / 8766.0 / 1e9,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_d".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*86400".to_string(),
                    calc: |x| x * 86400.0,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x*1440".to_string(),
                    calc: |x| x * 1440.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x * 24".to_string(),
                    calc: |x| x * 24.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x/7".to_string(),
                    calc: |x| x / 7.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x/14".to_string(),
                    calc: |x| x / 14.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x/30.4167".to_string(),
                    calc: |x| x / 30.4167,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x/40".to_string(),
                    calc: |x| x / 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x/365.25".to_string(),
                    calc: |x| x / 365.25,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x/365.25/10".to_string(),
                    calc: |x| x / 365.25 / 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x/365.25/100".to_string(),
                    calc: |x| x / 365.25 / 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x/365.25/1e3".to_string(),
                    calc: |x| x / 365.25 / 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/365.25/1e6".to_string(),
                    calc: |x| x / 365.25 / 1e9,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/365.25/1e6".to_string(),
                    calc: |x| x / 365.25 / 1e9,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_wk".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*604800".to_string(),
                    calc: |x| x * 604800.0,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x*10080".to_string(),
                    calc: |x| x * 10080.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x*168".to_string(),
                    calc: |x| x * 168.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x*7".to_string(),
                    calc: |x| x * 7.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x/2".to_string(),
                    calc: |x| x / 2.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x/4.34524".to_string(),
                    calc: |x| x / 4.34524,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x*7/40".to_string(),
                    calc: |x| x * 7.0 / 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x/52.1785714286".to_string(),
                    calc: |x| x / 52.1785714286,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x/52.1785714286/10".to_string(),
                    calc: |x| x / 52.1785714286 / 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x/52.1785714286/100".to_string(),
                    calc: |x| x / 52.1785714286 / 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x/52.1785714286/1e3".to_string(),
                    calc: |x| x / 52.1785714286 / 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/52.1785714286/1e6".to_string(),
                    calc: |x| x / 52.1785714286 / 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/52.1785714286/1e9".to_string(),
                    calc: |x| x / 52.1785714286 / 1e9,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_fn".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*604800*2".to_string(),
                    calc: |x| x * 604800.0 * 2.0,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "'x*10080*2".to_string(),
                    calc: |x| x * 10080.0 * 2.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x*336".to_string(),
                    calc: |x| x * 336.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x*14".to_string(),
                    calc: |x| x * 14.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x*2".to_string(),
                    calc: |x| x * 2.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x*2/4.34524".to_string(),
                    calc: |x| x * 2.0 / 4.34524,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x*14/40".to_string(),
                    calc: |x| x * 14.0 / 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x/26.0714285714".to_string(),
                    calc: |x| x / 26.0714285714,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x/26.0714285714/100".to_string(),
                    calc: |x| x / 26.0714285714 / 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x/26.0714285714/100".to_string(),
                    calc: |x| x / 26.0714285714 / 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x/26.0714285714/1e6".to_string(),
                    calc: |x| x / 26.0714285714 / 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/26.0714285714/1e6".to_string(),
                    calc: |x| x / 26.0714285714 / 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/26.0714285714/1e9".to_string(),
                    calc: |x| x / 26.0714285714 / 1e9,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_mth".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*2628002.88".to_string(),
                    calc: |x| x * 2628002.88,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x*43800.048".to_string(),
                    calc: |x| x * 43800.048,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x*730.0008".to_string(),
                    calc: |x| x * 730.0008,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x*30.4167".to_string(),
                    calc: |x| x * 30.4167,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x*4.34524".to_string(),
                    calc: |x| x * 4.34524,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x*4.34524/2".to_string(),
                    calc: |x| x * 4.34524 / 2.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x*30.4167/40".to_string(),
                    calc: |x| x * 30.4167 / 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x/12".to_string(),
                    calc: |x| x / 12.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x/12/10".to_string(),
                    calc: |x| x / 12.0 / 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x/12/10".to_string(),
                    calc: |x| x / 12.0 / 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x/12/1e3".to_string(),
                    calc: |x| x / 12.0 / 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/12/1e6".to_string(),
                    calc: |x| x / 12.0 / 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/12/1e9".to_string(),
                    calc: |x| x / 12.0 / 1e9,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_qua".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*86400*40".to_string(),
                    calc: |x| x * 86400.0 * 40.0,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x*1440*40".to_string(),
                    calc: |x| x * 1440.0 * 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x*24*40".to_string(),
                    calc: |x| x * 24.0 * 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x*40".to_string(),
                    calc: |x| x * 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x/7*40".to_string(),
                    calc: |x| x / 7.0 * 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x/14*40".to_string(),
                    calc: |x| x / 14.0 * 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x*40/30.4167".to_string(),
                    calc: |x| x * 40.0 / 30.4167,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x*40/365.25".to_string(),
                    calc: |x| x * 40.0 / 365.25,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x*40/365.25/10".to_string(),
                    calc: |x| x * 40.0 / 365.25 / 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x*40/365.25/100".to_string(),
                    calc: |x| x * 40.0 / 365.25 / 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x*40/365.25/1e3".to_string(),
                    calc: |x| x * 40.0 / 365.25 / 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x*40/365.25/1e3".to_string(),
                    calc: |x| x * 40.0 / 365.25 / 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x*40/365.25/1e3".to_string(),
                    calc: |x| x * 40.0 / 365.25 / 1e9,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_yr".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*31557600".to_string(),
                    calc: |x| x * 31557600.0,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x*525960".to_string(),
                    calc: |x| x * 525960.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x*8766".to_string(),
                    calc: |x| x * 8766.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x*365.25".to_string(),
                    calc: |x| x * 365.25,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x*52.1785714286".to_string(),
                    calc: |x| x * 52.1785714286,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x*26.071".to_string(),
                    calc: |x| x * 26.071,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x*12".to_string(),
                    calc: |x| x * 12.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x*52.1785714286/40".to_string(),
                    calc: |x| x * 52.1785714286 / 40.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x/10".to_string(),
                    calc: |x| x / 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x/100".to_string(),
                    calc: |x| x / 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x/1e3".to_string(),
                    calc: |x| x / 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/1e6".to_string(),
                    calc: |x| x / 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/1e9".to_string(),
                    calc: |x| x / 1e9,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_dec".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*31557600*10".to_string(),
                    calc: |x| x * 31557600.0 * 10.0,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x*525960*10".to_string(),
                    calc: |x| x * 525960.0 * 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x*8766*10".to_string(),
                    calc: |x| x * 8766.0 * 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x*365.25*10".to_string(),
                    calc: |x| x * 365.25 * 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x*52.1785714286*10".to_string(),
                    calc: |x| x * 52.1785714286 * 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x*26.071*10".to_string(),
                    calc: |x| x * 26.071 * 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x*12*10".to_string(),
                    calc: |x| x * 12.0 * 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x*52.1785714286/40*10".to_string(),
                    calc: |x| x * 52.1785714286 / 40.0 * 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x*10".to_string(),
                    calc: |x| x * 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x/10".to_string(),
                    calc: |x| x / 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x/1e2".to_string(),
                    calc: |x| x / 1e2,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/1e5".to_string(),
                    calc: |x| x / 1e5,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/1e8".to_string(),
                    calc: |x| x / 1e8,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_cen".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*31557600*100".to_string(),
                    calc: |x| x * 31557600.0 * 100.0,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x*525960*100".to_string(),
                    calc: |x| x * 525960.0 * 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x*8766*100".to_string(),
                    calc: |x| x * 8766.0 * 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x*365.25*100".to_string(),
                    calc: |x| x * 365.25 * 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x*52.1785714286*100".to_string(),
                    calc: |x| x * 52.1785714286 * 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x*26.071*100".to_string(),
                    calc: |x| x * 26.071 * 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x*12*100".to_string(),
                    calc: |x| x * 12.0 * 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x*52.1785714286/40*100".to_string(),
                    calc: |x| x * 52.1785714286 / 40.0 * 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x*100".to_string(),
                    calc: |x| x * 100.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x*10".to_string(),
                    calc: |x| x * 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x/1e3".to_string(),
                    calc: |x| x / 10.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/1e6".to_string(),
                    calc: |x| x / 1e4,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/1e9".to_string(),
                    calc: |x| x / 1e7,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_mil".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*31557600*1e3".to_string(),
                    calc: |x| x * 31557600.0 * 1e3,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x*525960*1e3".to_string(),
                    calc: |x| x * 525960.0 * 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x*8766*1e3".to_string(),
                    calc: |x| x * 8766.0 * 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x*365.25*1e3".to_string(),
                    calc: |x| x * 365.25 * 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x*52.1785714286*1e3".to_string(),
                    calc: |x| x * 52.1785714286 * 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x*26.071*1e3".to_string(),
                    calc: |x| x * 26.071 * 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x*12*1e3".to_string(),
                    calc: |x| x * 12.0 * 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x*52.1785714286/40*1e3".to_string(),
                    calc: |x| x * 52.1785714286 / 40.0 * 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x*1e3".to_string(),
                    calc: |x| x * 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x/10*1e3".to_string(),
                    calc: |x| x / 10.0 * 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x/100*1e3".to_string(),
                    calc: |x| x / 100.0 * 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/1e3".to_string(),
                    calc: |x| x / 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/1e6".to_string(),
                    calc: |x| x / 1e6,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_ma".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*31557600*1e6".to_string(),
                    calc: |x| x * 31557600.0 * 1e6,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x*525960*1e6".to_string(),
                    calc: |x| x * 525960.0 * 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x*8766*1e6".to_string(),
                    calc: |x| x * 8766.0 * 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x*365.25*1e6".to_string(),
                    calc: |x| x * 365.25 * 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x*52.1785714286*1e6".to_string(),
                    calc: |x| x * 52.1785714286 * 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x*26.071*1e6".to_string(),
                    calc: |x| x * 26.071 * 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x*12*1e6".to_string(),
                    calc: |x| x * 12.0 * 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x*52.1785714286/40*1e6".to_string(),
                    calc: |x| x * 52.1785714286 / 40.0 * 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x*1e6".to_string(),
                    calc: |x| x * 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x*1e5".to_string(),
                    calc: |x| x * 1e5,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x*1e4".to_string(),
                    calc: |x| x * 1e4,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x*1e3".to_string(),
                    calc: |x| x * 1e3,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_eon".to_string()),
                    text: "x/1e3".to_string(),
                    calc: |x| x / 1e3,
                    can_use_si: false,
                },
            ],
        },
        types::Unit {
            names: get_values("time_eon".to_string()),
            can_use_si: false,
            conversions: vec![
                types::Conversion {
                    names: get_values("time_s".to_string()),
                    text: "x*31557600*1e9".to_string(),
                    calc: |x| x * 31557600.0 * 1e9,
                    can_use_si: true,
                },
                types::Conversion {
                    names: get_values("time_min".to_string()),
                    text: "x*525960*1e9".to_string(),
                    calc: |x| x * 525960.0 * 1e9,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_hr".to_string()),
                    text: "x*8766*1e9".to_string(),
                    calc: |x| x * 8766.0 * 1e9,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_d".to_string()),
                    text: "x*365.25*1e9".to_string(),
                    calc: |x| x * 365.25 * 1e9,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_wk".to_string()),
                    text: "x*52.1785714286*1e9".to_string(),
                    calc: |x| x * 52.1785714286 * 1e9,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_fn".to_string()),
                    text: "x*26.071*1e9".to_string(),
                    calc: |x| x * 26.071 * 1e9,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mth".to_string()),
                    text: "x*12*1e9".to_string(),
                    calc: |x| x * 12.0 * 1e9,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_qua".to_string()),
                    text: "x*52.1785714286/40*1e9".to_string(),
                    calc: |x| x * 52.1785714286 / 40.0 * 1e9,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_yr".to_string()),
                    text: "x * 1".to_string(),
                    calc: |x| x * 1.0,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_dec".to_string()),
                    text: "x/10*1e9".to_string(),
                    calc: |x| x / 10.0 * 1e9,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_cen".to_string()),
                    text: "x/100*1e9".to_string(),
                    calc: |x| x / 100.0 * 1e9,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_mil".to_string()),
                    text: "x/1e3*1e9".to_string(),
                    calc: |x| x * 1e6,
                    can_use_si: false,
                },
                types::Conversion {
                    names: get_values("time_ma".to_string()),
                    text: "x/1e6*1e9".to_string(),
                    calc: |x| x * 1e3,
                    can_use_si: false,
                },
            ],
        },
    ];
}
